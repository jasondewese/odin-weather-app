(()=>{"use strict";var n={917:(n,e,t)=>{t.d(e,{Z:()=>o});var r=t(537),a=t.n(r),A=t(645),i=t.n(A)()(a());i.push([n.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}","",{version:3,sources:["webpack://./src/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}"],sourceRoot:""}]);const o=i},426:(n,e,t)=>{t.d(e,{Z:()=>o});var r=t(537),a=t.n(r),A=t(645),i=t.n(A)()(a());i.push([n.id,"html {\n    box-sizing: border-box;\n    font-family: 'Roboto', sans-serif;\n    font-size: 16px;\n    color: #0f172a;\n}\n\n.container {\n    display: grid;\n    grid-template-rows: 5rem 3fr 2fr 2fr;\n    height: 100vh;\n    width: 100vw;\n}\n\n/*****Style header******/\nheader {\n    padding: 0 50px 0 50px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #e0f2fe;\n    box-shadow: 0px 5px 10px rgba(0,0,0,0.2);\n    z-index:1;\n    font-size: 22px;\n}\n\nheader img {\n    width: 5rem;\n}\n\nheader input {\n    height: 2rem;\n    width: 250px;\n    font-size: 22px;\n    border-radius: 10px;\n}\n\n.current-units {\n    font-weight: 600;\n}\n\nheader form button {\n    border: none;\n    border-radius: 20px;\n    background-color: #f59e0b;\n    color: #0f172a; \n    height: 2.25rem;\n    width: 125px;\n    font-size: 24px;\n    box-shadow: 0px 3px 5px rgba(0,0,0,0.2), 0px -3px 5px rgba(0,0,0,0.2);\n    \n}\n\n.units-wrapper {\n    border: 3px solid #f59e0b;\n    border-radius: 20px;\n   \n    padding: 10px;\n}\n\nheader form button:hover, .units-wrapper:hover {\n    cursor: pointer;\n}\n/*****End style header*****/\n\n/*****style main*****/\nmain {\n    background-color: #f1f5f9;\n    padding: 2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.current-weather {\n    height: 100%;\n    width: 50%;\n    display: grid;\n    grid-template-rows: 2fr 1fr 2fr 2fr 1fr;\n    align-items: center;\n    justify-items: center;\n    font-size: 1.5rem;\n}\n\n.low-high {\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n}\n\n.current-weather img {\n    width: 5rem;\n}\n\n.city, .temp {\n    font-size: 2.5rem;\n    font-weight: 600;\n}\n\n/*****end style main*****/\n\n/*****style weather details*****/\n.weather-details {\n    padding: 30px 20% 30px 20%;\n    background-color: #e0f2fe;\n    box-shadow: 0px 5px 10px rgba(0,0,0,0.2), 0px -5px 10px rgba(0,0,0,0.2);\n    z-index: 1;\n    font-size: 22px;\n}\n\n.weather-details-wrapper {\n    display: flex;\n    align-items: center;\n    justify-items: center;\n    justify-content: space-evenly;\n    background-color: #e0f2fe;\n    height: 100%;\n}\n\n.weather-details-wrapper > div {\n    width: 150px;\n    height: 150px;\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    border: 3px solid #f59e0b;\n    border-radius: 20px;\n}\n\n.weather-details img {\n    width: 3rem;\n}\n\n/*****end style weather details*****/\n\n/*****style seven day forecast*****/\n.seven-day {\n    background-color: #f1f5f9;\n    font-size: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n}\n\n.seven-day-wrapper {\n    padding: 2rem;\n    display: grid;\n    gap:10px;\n    grid-template-columns: repeat(8, 1fr);\n    height: 150px;\n\n    width: 80%;\n}\n\n.seven-day img {\n    width: 2.5rem;\n}\n\n\n\n.day-wrapper {\n    height: 100%;\n    width: 150px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n    border-radius: 20px;\n    background-color: #e0f2fe;\n    box-shadow: 0px 5px 10px rgba(0,0,0,0.2), 0px -5px 10px rgba(0,0,0,0.2);\n    z-index: 1;\n}\n\n.day-wrapper .day {\n    font-size: 22px;\n}\n/*****end style seven day forecast*****/","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,iCAAiC;IACjC,eAAe;IACf,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,oCAAoC;IACpC,aAAa;IACb,YAAY;AAChB;;AAEA,wBAAwB;AACxB;IACI,sBAAsB;IACtB,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,yBAAyB;IACzB,wCAAwC;IACxC,SAAS;IACT,eAAe;AACnB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,mBAAmB;IACnB,yBAAyB;IACzB,cAAc;IACd,eAAe;IACf,YAAY;IACZ,eAAe;IACf,qEAAqE;;AAEzE;;AAEA;IACI,yBAAyB;IACzB,mBAAmB;;IAEnB,aAAa;AACjB;;AAEA;IACI,eAAe;AACnB;AACA,2BAA2B;;AAE3B,qBAAqB;AACrB;IACI,yBAAyB;IACzB,aAAa;IACb,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,UAAU;IACV,aAAa;IACb,uCAAuC;IACvC,mBAAmB;IACnB,qBAAqB;IACrB,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,SAAS;AACb;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA,yBAAyB;;AAEzB,gCAAgC;AAChC;IACI,0BAA0B;IAC1B,yBAAyB;IACzB,uEAAuE;IACvE,UAAU;IACV,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,qBAAqB;IACrB,6BAA6B;IAC7B,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,8BAA8B;IAC9B,yBAAyB;IACzB,mBAAmB;AACvB;;AAEA;IACI,WAAW;AACf;;AAEA,oCAAoC;;AAEpC,mCAAmC;AACnC;IACI,yBAAyB;IACzB,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,WAAW;AACf;;AAEA;IACI,aAAa;IACb,aAAa;IACb,QAAQ;IACR,qCAAqC;IACrC,aAAa;;IAEb,UAAU;AACd;;AAEA;IACI,aAAa;AACjB;;;;AAIA;IACI,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,6BAA6B;IAC7B,mBAAmB;IACnB,yBAAyB;IACzB,uEAAuE;IACvE,UAAU;AACd;;AAEA;IACI,eAAe;AACnB;AACA,uCAAuC",sourcesContent:["html {\n    box-sizing: border-box;\n    font-family: 'Roboto', sans-serif;\n    font-size: 16px;\n    color: #0f172a;\n}\n\n.container {\n    display: grid;\n    grid-template-rows: 5rem 3fr 2fr 2fr;\n    height: 100vh;\n    width: 100vw;\n}\n\n/*****Style header******/\nheader {\n    padding: 0 50px 0 50px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #e0f2fe;\n    box-shadow: 0px 5px 10px rgba(0,0,0,0.2);\n    z-index:1;\n    font-size: 22px;\n}\n\nheader img {\n    width: 5rem;\n}\n\nheader input {\n    height: 2rem;\n    width: 250px;\n    font-size: 22px;\n    border-radius: 10px;\n}\n\n.current-units {\n    font-weight: 600;\n}\n\nheader form button {\n    border: none;\n    border-radius: 20px;\n    background-color: #f59e0b;\n    color: #0f172a; \n    height: 2.25rem;\n    width: 125px;\n    font-size: 24px;\n    box-shadow: 0px 3px 5px rgba(0,0,0,0.2), 0px -3px 5px rgba(0,0,0,0.2);\n    \n}\n\n.units-wrapper {\n    border: 3px solid #f59e0b;\n    border-radius: 20px;\n   \n    padding: 10px;\n}\n\nheader form button:hover, .units-wrapper:hover {\n    cursor: pointer;\n}\n/*****End style header*****/\n\n/*****style main*****/\nmain {\n    background-color: #f1f5f9;\n    padding: 2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.current-weather {\n    height: 100%;\n    width: 50%;\n    display: grid;\n    grid-template-rows: 2fr 1fr 2fr 2fr 1fr;\n    align-items: center;\n    justify-items: center;\n    font-size: 1.5rem;\n}\n\n.low-high {\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n}\n\n.current-weather img {\n    width: 5rem;\n}\n\n.city, .temp {\n    font-size: 2.5rem;\n    font-weight: 600;\n}\n\n/*****end style main*****/\n\n/*****style weather details*****/\n.weather-details {\n    padding: 30px 20% 30px 20%;\n    background-color: #e0f2fe;\n    box-shadow: 0px 5px 10px rgba(0,0,0,0.2), 0px -5px 10px rgba(0,0,0,0.2);\n    z-index: 1;\n    font-size: 22px;\n}\n\n.weather-details-wrapper {\n    display: flex;\n    align-items: center;\n    justify-items: center;\n    justify-content: space-evenly;\n    background-color: #e0f2fe;\n    height: 100%;\n}\n\n.weather-details-wrapper > div {\n    width: 150px;\n    height: 150px;\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    border: 3px solid #f59e0b;\n    border-radius: 20px;\n}\n\n.weather-details img {\n    width: 3rem;\n}\n\n/*****end style weather details*****/\n\n/*****style seven day forecast*****/\n.seven-day {\n    background-color: #f1f5f9;\n    font-size: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n}\n\n.seven-day-wrapper {\n    padding: 2rem;\n    display: grid;\n    gap:10px;\n    grid-template-columns: repeat(8, 1fr);\n    height: 150px;\n\n    width: 80%;\n}\n\n.seven-day img {\n    width: 2.5rem;\n}\n\n\n\n.day-wrapper {\n    height: 100%;\n    width: 150px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n    border-radius: 20px;\n    background-color: #e0f2fe;\n    box-shadow: 0px 5px 10px rgba(0,0,0,0.2), 0px -5px 10px rgba(0,0,0,0.2);\n    z-index: 1;\n}\n\n.day-wrapper .day {\n    font-size: 22px;\n}\n/*****end style seven day forecast*****/"],sourceRoot:""}]);const o=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,A){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var o=0;o<this.length;o++){var s=this[o][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var p=[].concat(n[d]);r&&i[p[0]]||(void 0!==A&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=A),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),a&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=a):p[4]="".concat(a)),e.push(p))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),A="/*# ".concat(a," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([A]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var A={},i=[],o=0;o<n.length;o++){var s=n[o],d=r.base?s[0]+r.base:s[0],p=A[d]||0,c="".concat(d," ").concat(p);A[d]=p+1;var l=t(c),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==l)e[l].references++,e[l].updater(u);else{var f=a(u,r);r.byIndex=o,e.splice(o,0,{identifier:c,updater:f,references:1})}i.push(c)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var A=r(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<A.length;i++){var o=t(A[i]);e[o].references--}for(var s=r(n,a),d=0;d<A.length;d++){var p=t(A[d]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}A=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var A=e[r]={id:r,exports:{}};return n[r](A,A.exports,t),A.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=t(379),e=t.n(n),r=t(795),a=t.n(r),A=t(569),i=t.n(A),o=t(565),s=t.n(o),d=t(216),p=t.n(d),c=t(589),l=t.n(c),u=t(917),f={};f.styleTagTransform=l(),f.setAttributes=s(),f.insert=i().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=p(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;var C=t(426),m={};m.styleTagTransform=l(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=p(),e()(C.Z,m),C.Z&&C.Z.locals&&C.Z.locals;const h=async n=>{const e=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${n}&appid=380d5021392cb05faf4ef872ad04e3ef`,{mode:"cors"}),t=await e.json(),r=t.coord.lat,a=t.coord.lon,A=await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${r}&lon=${a}&exclude=alerts&appid=380d5021392cb05faf4ef872ad04e3ef&units=imperial`,{mode:"cors"}),i=await A.json();return i.name=t.name,i},y=(()=>{let n=[];return{getWeather:async e=>{const t=await h(e);return((n,e)=>{let t=new Date(1e3*n.current.dt);const r={name:n.name,main:n.current.weather[0].main,day:t.getUTCDay(),description:n.current.weather[0].description,temp:n.current.temp,pressure:n.current.pressure,feelsLike:n.current.feels_like,humidity:n.current.humidity,rain:n.daily[0].pop,tempMax:n.daily[0].temp.max,tempMin:n.daily[0].temp.min,windSpeed:n.current.wind_speed,windDirection:n.current.wind_deg};e.push(r)})(t,n),((n,e)=>{for(let t=1;t<=7;t++){let r=new Date(1e3*n.daily[t].dt),a={dt:n.daily[t].dt,day:r.getDay(),tempMax:n.daily[t].temp.max,tempMin:n.daily[t].temp.min,rain:n.daily[t].pop,main:n.daily[t].weather[0].main,description:n.daily[t].weather[0].description};e.push(a)}})(t,n),console.log(n),n}}})();(async()=>{const n=document.querySelector("#search-button"),e=document.querySelector("#location-search");n.addEventListener("click",(function(){/^[a-zA-z]+$/.test(e.value)||/^[a-zA-z]+,[a-zA-z]{2}$/.test(e.value)||/^[a-zA-z]+,[a-zA-z]+,[a-zA-z]{2}$/.test(e.value)?(y.getWeather(e.value),e.setCustomValidity(""),e.reportValidity()):(e.setCustomValidity("Please enter as {City}, {City,Country}, or {City,State,Country}"),e.reportValidity())}))})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,